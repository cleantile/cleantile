- var opts = {title: "cleantile initialization (with pane)", path: "../../"}
include "../lib/test" exposing opts

append imports
  link(rel="import", href="../container/cleantile-container.html")
  link(rel="import", href="../pane/cleantile-pane.html")
  link(rel="import", href="../demo/text-view/cleantile-text-view.html")

append style
  :stylus
    body
      margin 0
      padding 0
    html, body, cleantile-container
      width 100%
      height 100%

append fixtures
  test-fixture#testInit
    template
      cleantile-container
        cleantile-pane
          cleantile-text-view#first
          cleantile-text-view#second

append tests
  :coffeescript
    describe "fullscreen cleantile-container", ->
      [container, first, second] = []
      
      before ->
        container = fixture "testInit"
        first = container.querySelector "#first p"
        second = container.querySelector "#second p"
      
      it "should have both views visible", ->
        expect(first).to.not.be.null
        expect(second).to.not.be.null
        expect(first.offsetParent).to.not.be.null
        expect(second.offsetParent).to.not.be.null
      
      it "should layer views with no offset", ->
        firstRect = first.getBoundingClientRect()
        secondRect = second.getBoundingClientRect()
        expect(first.top).to.equal second.top
        expect(first.left).to.equal second.left
